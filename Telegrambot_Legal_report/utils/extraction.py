# utils/extraction.py
import fitz  # PyMuPDF
import pandas as pd
from docx import Document
from pprint import pprint


def extract_from_word(path):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –±–∞–∑–æ–≤—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è –∏–∑ —Ç–∞–±–ª–∏—Ü Word-–¥–æ–∫—É–º–µ–Ω—Ç–∞ –ö–æ–Ω—Ç—É—Ä.–§–æ–∫—É—Å –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É —è—á–µ–µ–∫ —Å –æ—Ç—á—ë—Ç–Ω–æ—Å—Ç—å—é."""
    doc = Document(path)
    data = {}

    # –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∏–º –ø–æ–ª—è –æ—Ç—á–µ—Ç–∞
    keywords = {
        "–ö—Ä–∞—Ç–∫–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ": "–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è",
        "–û–ì–†–ù": "–û–ì–†–ù",
        "–ò–ù–ù": "–ò–ù–ù",
        "–ö–ü–ü": "–ö–ü–ü",
        "–Æ—Ä. –∞–¥—Ä–µ—Å": "–Æ—Ä. –∞–¥—Ä–µ—Å",
        "–î–∞—Ç–∞ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è": "–î–∞—Ç–∞ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è",  # –±—ã–ª–æ "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è"
        "–£—Å—Ç–∞–≤–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª": "–£—Å—Ç–∞–≤–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª",  # –±—ã–ª–æ "–†–∞–∑–º–µ—Ä —É—Å—Ç–∞–≤–Ω–æ–≥–æ –∫–∞–ø–∏—Ç–∞–ª–∞"
        "–ì–µ–Ω–µ—Ä–∞–ª—å–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä": "–î–∏—Ä–µ–∫—Ç–æ—Ä",
        "–û—Å–Ω–æ–≤–Ω–æ–π –≤–∏–¥ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏": "–û–ö–í–≠–î",
        "–°–∏—Å—Ç–µ–º–∞ –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏—è": "–°–∏—Å—Ç–µ–º–∞ –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏—è",
        "–£—á—Ä–µ–¥–∏—Ç–µ–ª–∏": "–£—á—Ä–µ–¥–∏—Ç–µ–ª–∏ –∏ —É—á–∞—Å—Ç–Ω–∏–∫–∏"
    }

    # –†–µ–≥–∏—Å—Ç—Ä-–Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–π —Å–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∫–ª—é—á–µ–π
    found_keys = set()

    for table in doc.tables:
        for row in table.rows:
            if len(row.cells) < 2:
                continue
            key_raw = row.cells[0].text.strip().replace('\xa0', ' ')
            value = row.cells[1].text.strip()
            for keyword, label in keywords.items():
                if keyword.lower() in key_raw.lower():
                    data[label] = value
                    found_keys.add(label)

    # –û—Ç—á—ë—Ç –ø–æ –∫–∞–∂–¥–æ–º—É –∫–ª—é—á—É
    print("\nüîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–∑–≤–ª–µ—á–µ–Ω–∏—è:")
    for label in keywords.values():
        if label in data:
            print(f"‚úÖ {label}: {data[label]}")
        else:
            print(f"‚ùå {label} –Ω–µ –Ω–∞–π–¥–µ–Ω")

    return data


def extract_from_pdf(path):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∏–∑ PDF-–¥–æ–∫—É–º–µ–Ω—Ç–∞ (–ö–æ–Ω—Ç—É—Ä.–§–æ–∫—É—Å)."""
    data = {}
    doc = fitz.open(path)
    full_text = "\n".join(page.get_text() for page in doc)
    doc.close()

    if "EBIT" in full_text:
        lines = full_text.splitlines()
        for i, line in enumerate(lines):
            if "EBIT" in line:
                try:
                    ebit_line = lines[i + 1]
                    data["EBIT"] = ebit_line.strip()
                except:
                    pass

    if "–ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å" in full_text:
        for line in full_text.splitlines():
            if "–ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å" in line:
                parts = line.split()
                for part in parts[::-1]:
                    if part.replace(',', '').replace('.', '').isdigit():
                        data["–ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å"] = part
                        break

    # print(data)
    return data


def extract_from_excel(path):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –¥–µ–ª–∞ –∏—Å—Ç—Ü–æ–≤ –∏ –æ—Ç–≤–µ—Ç—á–∏–∫–æ–≤ –∏–∑ Excel-–¥–æ–∫—É–º–µ–Ω—Ç–∞."""
    data = {}
    df = pd.read_excel(path)
    df.columns = df.columns.str.strip()

    istets = df[df['–†–æ–ª—å'] == '–ò—Å—Ç–µ—Ü'] if '–†–æ–ª—å' in df else pd.DataFrame()
    otvetchik = df[df['–†–æ–ª—å'] == '–û—Ç–≤–µ—Ç—á–∏–∫'] if '–†–æ–ª—å' in df else pd.DataFrame()

    data["–ò—Å—Ç–µ—Ü_–¥–µ–ª–∞"] = istets.to_dict(orient="records")
    data["–û—Ç–≤–µ—Ç—á–∏–∫_–¥–µ–ª–∞"] = otvetchik.to_dict(orient="records")

    # print(data)
    return data