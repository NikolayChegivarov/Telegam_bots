from telegram import Update
from telegram.ext import ContextTypes, ConversationHandler
from history.history_manager import get_history_by_days

# –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è FSM
AWAIT_DAYS = 1

# –°—Ç–∞—Ä—Ç –∏—Å—Ç–æ—Ä–∏–∏
async def start_history_request(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ó–∞ —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é?")
    return AWAIT_DAYS

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥—ë–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞
async def process_days_input(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        days = int(update.message.text)
        if days > 999:
            await update.message.reply_text("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–∞ –∏—Å—Ç–æ—Ä–∏–∏ 999 –¥–Ω–µ–π")
            return ConversationHandler.END

        history = get_history_by_days(days)

        if not history:
            await update.message.reply_text("–ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –∑–∞ —ç—Ç–æ—Ç –ø–µ—Ä–∏–æ–¥.")
        else:
            text = "\n".join(
                [f"{entry['timestamp']} ‚Äî {entry['org']} ({entry['filename']})" for entry in history]
            )
            await update.message.reply_text(f"üóÇ –ò—Å—Ç–æ—Ä–∏—è –∑–∞ {days} –¥–Ω–µ–π:\n\n{text}")
    except ValueError:
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π.")
    return ConversationHandler.END

# –û—Ç–º–µ–Ω–∞ (–µ—Å–ª–∏ –Ω–∞–¥–æ)
async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ó–∞–ø—Ä–æ—Å –∏—Å—Ç–æ—Ä–∏–∏ –æ—Ç–º–µ–Ω—ë–Ω.")
    return ConversationHandler.END
