from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, InputFile, ReplyKeyboardRemove, \
    ReplyKeyboardMarkup
from telegram.ext import ContextTypes
import os
import traceback

from bot.handlers.admin_panel import handle_main_interface
from database.history_manager import read_history
# from database.database_interaction import DatabaseInteraction
from keyboards import reports


async def reports_panel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–†–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É '–û—Ç—á–µ—Ç—ã'. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç—á–µ—Ç–æ–≤."""
    keyboard = reports()
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)


async def handle_history(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥, –∑–∞ –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç—á–µ—Ç—ã:",
        reply_markup=ReplyKeyboardMarkup(
            keyboard=[
                ["1 –º–µ—Å—è—Ü", "2 –º–µ—Å—è—Ü–∞", "3 –º–µ—Å—è—Ü–∞"]
            ],
            resize_keyboard=True,
            one_time_keyboard=True
        )
    )


async def handle_history_period(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.strip()
    mapping = {
        "1 –º–µ—Å—è—Ü": 1,
        "2 –º–µ—Å—è—Ü–∞": 2,
        "3 –º–µ—Å—è—Ü–∞": 3
    }

    if text not in mapping:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.")
        return

    period_index = mapping[text]

    try:
        history = read_history(period_index)
        if not history:
            await update.message.reply_text("–û—Ç—á–µ—Ç—ã –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.")
            return

        context.user_data['history_files'] = history

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏
        keyboard = []
        for idx, (org_name, file_path, created_at) in enumerate(history):
            filename = os.path.basename(file_path)
            keyboard.append([
                InlineKeyboardButton(text=filename, callback_data=f"GET_REPORT_{idx}")
            ])

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"
        keyboard.append([
            InlineKeyboardButton(text="üè† –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å", callback_data="TO_MAIN_INTERFACE")
        ])

        reply_markup = InlineKeyboardMarkup(keyboard)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –æ—Ç—á–µ—Ç –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:",
            reply_markup=reply_markup
        )

        # –£–¥–∞–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –º–µ—Å—è—Ü–µ–≤
        await update.message.reply_text(
            "‚è≥ –°–∫—Ä—ã–≤–∞—é –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–∏–æ–¥–∞...",
            reply_markup=ReplyKeyboardRemove()
        )

    except Exception as e:
        traceback.print_exc()
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏: {e}")


async def handle_report_file_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    try:
        data = query.data
        if not data.startswith("GET_REPORT_"):
            return

        idx = int(data.replace("GET_REPORT_", ""))
        history_files = context.user_data.get('history_files', [])
        if idx >= len(history_files):
            await query.edit_message_text("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä —Ñ–∞–π–ª–∞.")
            return

        _, file_path, _ = history_files[idx]
        if not os.path.exists(file_path):
            await query.edit_message_text("‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.")
            return

        with open(file_path, "rb") as f:
            await context.bot.send_document(chat_id=query.message.chat_id, document=InputFile(f))

    except Exception as e:
        traceback.print_exc()
        await query.edit_message_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞: {e}")


async def handle_main_interface_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å."""
    query = update.callback_query
    await query.answer()

    # –í—ã–∑—ã–≤–∞–µ–º —É–∂–µ –≥–æ—Ç–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é ‚Äî –æ–Ω–∞ —Å–∞–º–∞ –≤—Å—ë —Å–¥–µ–ª–∞–µ—Ç
    await handle_main_interface(update, context)
