# bot/handlers/admin_panel.py

from telegram import Update
from telegram.ext import ContextTypes
from database.database_interaction import DatabaseInteraction
from keyboards import get_admin_keyboard, get_user_keyboard, administrative_keyboard, get_auth_keyboard
from keyboards import get_pending_users_keyboard  # –¥–æ–±–∞–≤—å –∏–º–ø–æ—Ä—Ç


# üõ† "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è"
async def handle_admin_panel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–í—ã–∑—ã–≤–∞–µ—Ç –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è."""
    db = DatabaseInteraction()
    user_id = update.effective_user.id

    try:
        if db.is_admin(user_id):
            await update.message.reply_text("–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", reply_markup=administrative_keyboard())
        else:
            await update.message.reply_text("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ handle_admin_panel: {e}")
    finally:
        db.close()


async def add_employee(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π '–í –æ–∂–∏–¥–∞–Ω–∏–∏' –≤ –≤–∏–¥–µ –∫–Ω–æ–ø–æ–∫."""
    db = DatabaseInteraction()
    admin_id = update.effective_user.id

    try:
        if not db.is_admin(admin_id):
            await update.message.reply_text("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è.")
            return

        pending_users = db.get_in_anticipation_users()

        if not pending_users:
            await update.message.reply_text("–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º '–í –æ–∂–∏–¥–∞–Ω–∏–∏'.")
            return

        reply_markup = get_pending_users_keyboard(pending_users)
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:", reply_markup=reply_markup)

    finally:
        db.close()


async def handle_main_interface(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–í—ã–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –Ω–∞ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."""
    db = DatabaseInteraction()
    user_id = update.effective_user.id

    # –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–∞–∫ text, —Ç–∞–∫ –∏ callback
    message = update.message or (update.callback_query and update.callback_query.message)

    try:
        if db.is_admin(user_id):
            await message.reply_text(
                "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.",
                reply_markup=get_admin_keyboard()
            )
        else:
            await message.reply_text(
                "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞.",
                reply_markup=get_user_keyboard()
            )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ handle_main_interface: {e}")
    finally:
        db.close()

