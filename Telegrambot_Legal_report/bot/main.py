# bot/main.py

import os
from dotenv import load_dotenv
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    CallbackQueryHandler,
    ConversationHandler,
    filters,
)
from telegram.error import NetworkError

from bot.handlers.authorization import start, handle_authorize, handle_auth_callback
from bot.handlers.blocking_user import handle_block_user, handle_block_callback
from bot.handlers.admin_panel import handle_admin_panel, add_employee, handle_main_interface
from bot.handlers.fallback import handle_unknown
from bot.handlers.create_report import get_report_conversation_handler
from bot.handlers.view_reports import (
    reports_panel,
    handle_history,
    handle_history_period,
    handle_extract_report,
    handle_org_name_input,
    handle_send_report_by_search,
    handle_report_file_callback,
    handle_main_interface_callback,
    handle_history_file,
    ASK_ORG_NAME
)

load_dotenv()
TOKEN = os.getenv("TELEGRAM_TOKEN_BOT")

print("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")

app = Application.builder().token(TOKEN).build()

# –ö–æ–º–∞–Ω–¥—ã
app.add_handler(CommandHandler("start", start))

# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
app.add_handler(MessageHandler(filters.Text("–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è"), handle_authorize))
app.add_handler(CallbackQueryHandler(handle_auth_callback, pattern='^auth_'))

# –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
app.add_handler(MessageHandler(filters.Text("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è"), handle_admin_panel))
app.add_handler(MessageHandler(filters.Text("–î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"), add_employee))
app.add_handler(CallbackQueryHandler(handle_auth_callback, pattern='^approve_'))
app.add_handler(MessageHandler(filters.Text("–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"), handle_block_user))
app.add_handler(CallbackQueryHandler(handle_block_callback, pattern='^block_'))
app.add_handler(MessageHandler(filters.Text("–û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"), handle_main_interface))

# –†–∞–±–æ—Ç–∞ —Å –æ—Ç—á–µ—Ç–∞–º–∏
app.add_handler(get_report_conversation_handler())
app.add_handler(MessageHandler(filters.TEXT & filters.Regex("^–û—Ç—á–µ—Ç—ã$"), reports_panel))
app.add_handler(MessageHandler(filters.Text("–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤"), handle_history))
app.add_handler(MessageHandler(filters.Text(["1 –º–µ—Å—è—Ü", "2 –º–µ—Å—è—Ü–∞", "3 –º–µ—Å—è—Ü–∞"]), handle_history_period))
app.add_handler(CallbackQueryHandler(handle_report_file_callback, pattern="^GET_REPORT_"))
app.add_handler(CallbackQueryHandler(handle_main_interface_callback, pattern="^TO_MAIN_INTERFACE$"))
app.add_handler(ConversationHandler(
    entry_points=[MessageHandler(filters.Text("–ò–∑–≤–ª–µ—á—å –æ—Ç—á–µ—Ç"), handle_extract_report)],
    states={ASK_ORG_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_org_name_input)]},
    fallbacks=[]
))
app.add_handler(CallbackQueryHandler(handle_send_report_by_search, pattern="^SEND_REPORT_"))
app.add_handler(MessageHandler(filters.TEXT & filters.Regex("^–§–∞–π–ª –∏—Å—Ç–æ—Ä–∏–∏$"), handle_history_file))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_unknown))

print("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω.\n")

# –ü—Ä–æ—Å—Ç–æ –∑–∞–ø—É—Å–∫, –±–µ–∑ asyncio.run –∏ –±–µ–∑ —Ü–∏–∫–ª–æ–≤
app.run_polling()
