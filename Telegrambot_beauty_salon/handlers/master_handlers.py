from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from database import connect_to_database
from keyboards import get_master_main_menu, get_cancel_kb

router = Router()


class MasterStates(StatesGroup):
    waiting_for_specialization = State()
    waiting_for_photo = State()
    waiting_for_comment = State()


@router.message(F.text == 'üíº –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
async def show_master_profile(message: Message):
    conn = connect_to_database()
    try:
        with conn.cursor() as cursor:
            cursor.execute("""
                SELECT u.first_name, u.last_name, u.phone, u.specialization, u.my_comment, s.status_user 
                FROM users u
                JOIN status s ON u.id_status = s.id_status
                WHERE u.id_user_telegram = %s
            """, (message.from_user.id,))
            master = cursor.fetchone()

            if master:
                text = f"üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –º–∞—Å—Ç–µ—Ä–∞:\n\n–ò–º—è: {master[0]}\n–§–∞–º–∏–ª–∏—è: {master[1]}\n–¢–µ–ª–µ—Ñ–æ–Ω: {master[2] or '–Ω–µ —É–∫–∞–∑–∞–Ω'}\n"
                text += f"–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: {master[3] or '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}\n–û —Å–µ–±–µ: {master[4] or '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}\n–°—Ç–∞—Ç—É—Å: {master[5]}"
                await message.answer(text)
            else:
                await message.answer("–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    finally:
        conn.close()


def register_master_handlers(dp):
    dp.include_router(router)
